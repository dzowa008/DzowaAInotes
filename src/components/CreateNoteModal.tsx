import React from 'react';
import { X } from 'lucide-react';

interface CreateNoteModalProps {
  isOpen: boolean;
  onClose: () => void;
  onCreateNote: () => void;
  title: string;
  setTitle: (title: string) => void;
  content: string;
  setContent: (content: string) => void;
}

function CreateNoteModal({ isOpen, onClose, onCreateNote, title, setTitle, content, setContent }: CreateNoteModalProps) {
  const [isAiProcessing, setIsAiProcessing] = React.useState(false);
  const [aiAction, setAiAction] = React.useState('');

  const handleAiAction = (action: string) => {
    setIsAiProcessing(true);
    setAiAction(action);
    setTimeout(() => {
      let newContent = content;
      switch (action) {
        case 'improve':
          newContent = `${content}\n\n[AI Enhanced]\nThis content has been improved for clarity and structure.`;
          break;
        case 'summarize':
          newContent = `## AI Summary\n\nKey Points:\n• Main topic: ${title}\n• Content length: ${content.length} characters\n\n---\n\n${content}`;
          break;
        case 'expand':
          newContent = `${content}\n\n## Additional Context\n\nHere are some related considerations and further details.\n\n[This section was generated by AI]`;
          break;
        case 'structure':
          const lines = content.split('\n').filter(line => line.trim());
          newContent = `# ${title}\n\n## Overview\n${lines[0] || 'Main content overview'}\n\n## Details\n${lines.slice(1).map(line => `• ${line}`).join('\n')}\n\n## Summary\nThis note has been restructured for better organization.`;
          break;
        default:
          break;
      }
      setContent(newContent);
      setIsAiProcessing(false);
      setAiAction('');
    }, 1200);
  };

  if (!isOpen) return null;

  return (
    <div className="fixed inset-0 bg-black/50 backdrop-blur-sm flex items-center justify-center z-50 p-4">
      <div className="bg-gray-900 border border-gray-800 rounded-2xl p-6 w-full max-w-2xl flex">
        {/* Main Note Creation Form */}
        <div className="flex-1 pr-6">
          <div className="flex items-center justify-between mb-6">
            <h3 className="text-xl font-semibold text-white">Create New Note</h3>
            <button
              onClick={onClose}
              className="text-gray-400 hover:text-white"
            >
              <X className="w-6 h-6" />
            </button>
          </div>
          <div className="space-y-4">
            <input
              type="text"
              placeholder="Note title..."
              value={title}
              onChange={(e) => setTitle(e.target.value)}
              className="w-full px-4 py-3 bg-gray-800/50 border border-gray-700 rounded-lg text-white placeholder-gray-400 focus:outline-none focus:border-purple-500"
            />
            <textarea
              placeholder="Start writing your note..."
              value={content}
              onChange={(e) => setContent(e.target.value)}
              rows={8}
              className="w-full px-4 py-3 bg-gray-800/50 border border-gray-700 rounded-lg text-white placeholder-gray-400 focus:outline-none focus:border-purple-500 resize-none"
            />
            <div className="flex justify-end space-x-3">
              <button
                onClick={onClose}
                className="px-6 py-2 text-gray-400 hover:text-white transition-colors"
              >
                Cancel
              </button>
              <button
                onClick={onCreateNote}
                className="px-6 py-2 bg-gradient-to-r from-purple-500 to-pink-500 text-white rounded-lg font-semibold hover:from-purple-600 hover:to-pink-600 transition-all duration-200"
              >
                Create Note
              </button>
            </div>
          </div>
        </div>
        {/* AI Assistant Sidebar */}
        <div className="w-64 border-l border-gray-800 pl-6 flex flex-col">
          <h4 className="text-lg font-semibold text-purple-300 mb-4">AI Assistant</h4>
          <div className="space-y-3">
            <button
              disabled={isAiProcessing}
              onClick={() => handleAiAction('improve')}
              className="w-full p-2 bg-purple-500/10 rounded-lg text-left text-purple-200 hover:bg-purple-500/20 disabled:opacity-50"
            >
              {isAiProcessing && aiAction === 'improve' ? 'Improving...' : 'Improve Note'}
            </button>
            <button
              disabled={isAiProcessing}
              onClick={() => handleAiAction('summarize')}
              className="w-full p-2 bg-purple-500/10 rounded-lg text-left text-purple-200 hover:bg-purple-500/20 disabled:opacity-50"
            >
              {isAiProcessing && aiAction === 'summarize' ? 'Summarizing...' : 'Summarize Note'}
            </button>
            <button
              disabled={isAiProcessing}
              onClick={() => handleAiAction('expand')}
              className="w-full p-2 bg-purple-500/10 rounded-lg text-left text-purple-200 hover:bg-purple-500/20 disabled:opacity-50"
            >
              {isAiProcessing && aiAction === 'expand' ? 'Expanding...' : 'Expand Note'}
            </button>
            <button
              disabled={isAiProcessing}
              onClick={() => handleAiAction('structure')}
              className="w-full p-2 bg-purple-500/10 rounded-lg text-left text-purple-200 hover:bg-purple-500/20 disabled:opacity-50"
            >
              {isAiProcessing && aiAction === 'structure' ? 'Structuring...' : 'Structure Note'}
            </button>
          </div>
          <div className="mt-6 text-xs text-gray-400">
            Use the AI Assistant to get suggestions, summaries, and improvements for your note as you write.
          </div>
        </div>
      </div>
    </div>
  );
}

export default CreateNoteModal;